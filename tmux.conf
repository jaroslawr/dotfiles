# GENERAL
#

# Set $TERM
set -g default-terminal "screen-256color"

# Long history
set -g history-limit 20000

# Make esc react like any other key
set -g escape-time 0

# Only execute one tmux key binding after tmux prefix key is entered
set -g repeat-time 0

# Pass focus events to apps
set -g focus-events on

# Number windows from 1
set -g base-index 1

# Renumber windows after one window is closed
set -g renumber-windows on

# Refresh window title every 5 seconds
set -g status-interval 5

# KEY BINDINGS
#

# Vi style keybindings
set -g mode-keys vi
set -g status-keys vi

# Create new pane in the working directory of the current one
bind-key c new-window -c "#{pane_current_path}"

# Vim-like pane control
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# M-<N> window switching
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# C-l clears history
bind-key C-l send-keys C-l \; run-shell "sleep .5s" \; clear-history

# C-b C-r reloads config
bind-key C-r source ~/.tmux.conf

# CLIPBOARD
#

# Catch mouse events
set -g mouse on

# Specify separators for select-word
set -g word-separators ' '

# mouse drag finished - copy selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear "wl-copy -pn"

# mouse1 double click - copy word
bind-key -T root DoubleClick1Pane select-pane \; copy-mode \; send-keys -MX select-word \; send-keys -X copy-pipe-no-clear "wl-copy -pn"
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -MX select-word \; send-keys -X copy-pipe-no-clear "wl-copy -pn"

# mouse1 triple click - copy line
bind-key -T copy-mode-vi TripleClick1Pane send-keys -MX select-line \; send-keys -X copy-pipe-no-clear "wl-copy -pn"

# mouse1 down in copy mode - clear selection
bind-key -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection

# mouse3 down in copy mode - cancel selection
bind-key -T copy-mode-vi MouseDown3Pane send-keys -X cancel \; select-pane -t=

# mouse2 down - paste primary clipboard
bind-key -T root MouseDown2Pane select-pane -t= \; run "wl-paste -pn | tmux load-buffer - ; tmux paste-buffer -p"
bind-key -T copy-mode-vi MouseDown2Pane select-pane -t= \; run "wl-paste -pn | tmux load-buffer - ; tmux paste-buffer -p" \; send-keys -X cancel

# y - copy
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"

# C-b C-p - paste regular clipboard
bind-key C-p run "wl-paste -n | tmux load-buffer - ; tmux paste-buffer -p"

# APPEARANCE
#

# Status bar
set -g status-style bg=colour235,fg=white
set -g message-style fg=colour11
set -g status-left ""
set -g status-right "#[fg=colour5] #{pane_current_path} "
set -g window-status-separator ''

# Status bar - active window
set -g window-status-current-format \
'#[bg=colour236] #[fg=colour15]#I #[fg=colour5]#(proname #{pane_current_path} | sed -E "s/(.+)/\1 /")\
#[bg=colour0,fg=colour3] #W#{?#{==:#{pane_title},},, #T} '
set -g window-status-current-style fg=black

# Status bar - inactive window
set -g window-status-format \
'#[bg=colour236] #[fg=colour7]#I #(proname #{pane_current_path} | sed -E "s/(.+)/\1 /")\
#[bg=colour0] #W#{?#{==:#{pane_title},},, #T} '
set -g window-status-style fg=colour248

# Borders
set -g pane-border-style fg=colour239
set -g pane-active-border-style fg=colour239

# Selection (copy mode)
set -g mode-style bg=colour11,fg=black

# Pass on the terminal title
set -g set-titles on
set -g set-titles-string '#(proname #{pane_current_path} | sed -E "s/(.+)/\(\1\) /") #W #T'
