#!/usr/bin/python

from colorsys import hls_to_rgb
from dataclasses import dataclass


@dataclass
class Color:
    name: str
    h: float
    s: float
    l: float
    comment: str | None = None


global colors
colors = []


def defcolor(**kwargs):
    colors.append(Color(**kwargs))


# Tunables

grayscale_h = 210

black_h = grayscale_h
black_s = 0.10
black_l = 0.10

normal_s = 1.00
normal_l = 0.82

bright_s = 1.00
bright_l = 0.75

gray1_h = grayscale_h
gray1_s = 0.50

gray2_h = grayscale_h
gray2_s = 0.25

# Grayscale range of grayscale_count_per_set colors for each grayscale_range_sat
grayscale_ranges_sats = [0.15, 0.30]
grayscale_count_per_sat = 100

# Define colors to use as standard ANSI terminal colors

defcolor(name="BLACK",          h=black_h, s=black_s,     l=black_l)  # 0
defcolor(name="RED",            h=0,       s=normal_s,    l=normal_l) # 1
defcolor(name="GREEN",          h=140,     s=normal_s,    l=normal_l) # 2
defcolor(name="YELLOW",         h=50,      s=normal_s,    l=normal_l) # 3
defcolor(name="BLUE",           h=200,     s=normal_s,    l=normal_l) # 4
defcolor(name="MAGENTA",        h=20,      s=normal_s,    l=normal_l) # 5
defcolor(name="CYAN",           h=170,     s=normal_s,    l=normal_l) # 6
defcolor(name="WHITE",          h=gray1_h, s=gray1_s,     l=normal_l) # 7
defcolor(name="BRIGHT_BLACK",   h=gray2_h, s=gray2_s,     l=bright_l) # 8
defcolor(name="BRIGHT_RED",     h=220,     s=bright_s,    l=bright_l) # 9
defcolor(name="BRIGHT_GREEN",   h=140,     s=bright_s,    l=bright_l) # 10
defcolor(name="BRIGHT_YELLOW",  h=50,      s=bright_s,    l=bright_l) # 11
defcolor(name="BRIGHT_BLUE",    h=200,     s=bright_s,    l=bright_l) # 12
defcolor(name="BRIGHT_MAGENTA", h=20,      s=bright_s,    l=bright_l) # 13
defcolor(name="BRIGHT_CYAN",    h=170,     s=bright_s,    l=bright_l) # 14
defcolor(name="BRIGHT_WHITE",   h=0,       s=0,           l=1.0)      # 15

# Write out COLOR_{name} environment variables with escape codes for ANSI colors

for i, color in enumerate(colors):
    print(f"export COLOR_{color.name}=\"\\[$(tput setaf {i})\\]\"")

print()

# Define pseudo-grayscale color ranges

sat_step = 1.0/grayscale_count_per_sat
for i, grayscale_s in enumerate(grayscale_ranges_sats):
    for j in range(0, grayscale_count_per_sat):
        defcolor(name=f"GRAY_{i+1}_{j}", h=grayscale_h, s=grayscale_s, l=j*sat_step)

# Write out COLOR_{name}_RGB environment variables

for color in colors:
    r, g, b = hls_to_rgb(color.h/360, color.l, color.s)
    rgb_hex = "#%02x%02x%02x" % (round(r*255), round(g*255), round(b*255))
    print(f"export COLOR_{color.name}_RGB='{rgb_hex}'")
