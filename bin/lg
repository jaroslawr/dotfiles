#!/usr/bin/bash

# Git log browser using fzf

GIT_LOG_FORMAT="%C(auto)%h %C(12)%cd %C(8)%<(20,trunc)%ae %C(auto)%s"

GIT_LOG_OPTIONS=()
GIT_LOG_OPTIONS+=("--color=always")
GIT_LOG_OPTIONS+=("--date=iso-strict")
GIT_LOG_OPTIONS+=("--format=${GIT_LOG_FORMAT}")

GIT_SHOW_OPTIONS=()
GIT_SHOW_OPTIONS+=("--color=always")
GIT_SHOW_OPTIONS+=("--date=iso-strict")
GIT_SHOW_OPTIONS+=("--pretty=fuller")

FZF_OPTIONS=()
FZF_OPTIONS=("--ansi")

lg() {
    # Split arguments on "--" into options and paths
    declare -a options
    declare -a paths
    local options_parsed
    for arg in "$@"; do
        if [[ "${arg}" == "--" ]]; then
            options_parsed="true"
        else
            if [[ "${options_parsed}" == "true" ]]; then
                paths+=("${arg}")
            else
                options+=("${arg}")
            fi
        fi
    done

    declare -a git_log_args
    git_log_args+=("${GIT_LOG_OPTIONS[@]}")
    if [[ ${#paths[@]} -gt 0 ]]; then
        git_log_args+=("--")
        git_log_args+=("${paths[@]}")
    fi

    declare -a git_show_args
    git_show_args+=(${GIT_SHOW_OPTIONS[@]})
    git_show_args+=("{1}")
    if [[ ${#paths[@]} -gt 0 ]]; then
        git_show_args+=("--")
        git_show_args+=("$(printf "%q " "${paths[@]}")")
    fi

    local git_show_cmdline
    git_show_cmdline="git show ${git_show_args[@]}"

    declare -a fzf_args
    fzf_args+=("${FZF_OPTIONS[@]}")
    fzf_args+=("--preview=${git_show_cmdline}")
    fzf_args+=("--bind=ctrl-m:execute:(${git_show_cmdline} | less -CRX)")

    git log "${git_log_args[@]}" | fzf "${fzf_args[@]}"
}

lg "$@"
